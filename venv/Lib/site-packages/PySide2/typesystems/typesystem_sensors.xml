<?xml version="1.0" encoding="UTF-8"?>
<!--
/****************************************************************************
**
** Copyright (C) 2018 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt for Python.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or (at your option) the GNU General
** Public license version 3 or any later version approved by the KDE Free
** Qt Foundation. The licenses are as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-2.0.html and
** https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/
-->
<typesystem package="PySide2.QtSensors">
    <load-typesystem name="typesystem_core.xml" generate="no"/>
<!-- overrides QObject::metaObject() by private method
    <object-type name="QSensorGesture"/>
-->
    <object-type name="QSensorGestureManager"/>
    <object-type name="QSensorGesturePluginInterface"/>
    <object-type name="QSensorGestureRecognizer"/>
    <object-type name="QAccelerometer">
        <enum-type name="AccelerationMode"/>
    </object-type>
    <object-type name="QAccelerometerFilter"/>
    <object-type name="QAccelerometerReading"/>
    <object-type name="QAltimeter"/>
    <object-type name="QAltimeterFilter"/>
    <object-type name="QAltimeterReading"/>
    <object-type name="QAmbientLightFilter"/>
    <object-type name="QAmbientLightReading">
        <enum-type name="LightLevel"/>
    </object-type>
    <object-type name="QAmbientLightSensor"/>
    <object-type name="QAmbientTemperatureFilter"/>
    <object-type name="QAmbientTemperatureReading"/>
    <object-type name="QAmbientTemperatureSensor"/>
    <object-type name="QCompass"/>
    <object-type name="QCompassFilter"/>
    <object-type name="QCompassReading"/>
    <object-type name="QDistanceFilter"/>
    <object-type name="QDistanceReading"/>
    <object-type name="QDistanceSensor"/>
    <object-type name="QGyroscope"/>
    <object-type name="QGyroscopeFilter"/>
    <object-type name="QGyroscopeReading"/>
    <object-type name="QHolsterFilter"/>
    <object-type name="QHolsterReading"/>
    <object-type name="QHolsterSensor"/>
    <object-type name="QHumidityFilter"/>
    <object-type name="QHumidityReading"/>
    <object-type name="QHumiditySensor"/>
    <object-type name="QIRProximityFilter"/>
    <object-type name="QIRProximityReading"/>
    <object-type name="QIRProximitySensor"/>
    <object-type name="QLidFilter"/>
    <object-type name="QLidReading"/>
    <object-type name="QLidSensor"/>
    <object-type name="QLightFilter"/>
    <object-type name="QLightReading"/>
    <object-type name="QLightSensor"/>
    <object-type name="QMagnetometer"/>
    <object-type name="QMagnetometerFilter"/>
    <object-type name="QMagnetometerReading"/>
    <object-type name="QOrientationFilter"/>
    <object-type name="QOrientationReading">
        <enum-type name="Orientation"/>
    </object-type>
    <object-type name="QOrientationSensor"/>
    <object-type name="QPressureFilter"/>
    <object-type name="QPressureReading"/>
    <object-type name="QPressureSensor"/>
    <object-type name="QProximityFilter"/>
    <object-type name="QProximityReading"/>
    <object-type name="QProximitySensor"/>
    <object-type name="QRotationFilter"/>
    <object-type name="QRotationReading"/>
    <object-type name="QRotationSensor"/>
    <object-type name="QSensor">
      <enum-type name="Feature"/>
      <enum-type name="AxesOrientationMode"/>
    </object-type>
    <object-type name="QSensorFilter"/>
    <object-type name="QSensorReading"/>
    <value-type name="qoutputrange"/>
    <object-type name="QSensorBackend"/>
    <object-type name="QSensorBackendFactory"/>
    <object-type name="QSensorManager"/>
    <object-type name="QSensorChangesInterface"/>
    <object-type name="QSensorPluginInterface"/>
    <object-type name="QTapFilter"/>
    <object-type name="QTapReading">
        <enum-type name="TapDirection"/>
    </object-type>
    <object-type name="QTapSensor"/>
    <object-type name="QTiltFilter"/>
    <object-type name="QTiltReading"/>
    <object-type name="QTiltSensor"/>
</typesystem>
