<?xml version="1.0" encoding="UTF-8"?>
<!--
/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt for Python.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or (at your option) the GNU General
** Public license version 3 or any later version approved by the KDE Free
** Qt Foundation. The licenses are as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-2.0.html and
** https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/
-->
<typesystem package="PySide2.QtScript">
    <load-typesystem name="typesystem_core.xml" generate="no"/>

    <object-type name="QScriptable"/>
    <object-type name="QScriptClass">
        <enum-type name="Extension"/>
        <enum-type name="QueryFlag"/>
    </object-type>
    <object-type name="QScriptClassPropertyIterator"/>
    <object-type name="QScriptContext">
        <enum-type name="Error"/>
        <enum-type name="ExecutionState"/>
    </object-type>
    <value-type name="QScriptContextInfo">
        <enum-type name="FunctionType"/>
    </value-type>
    <object-type name="QScriptEngineAgent">
        <enum-type name="Extension"/>
    </object-type>
    <object-type name="QScriptEngine">
        <enum-type name="QObjectWrapOption" flags="QObjectWrapOptions"/>
        <enum-type name="ValueOwnership"/>
        <!-- Not supported BUG #957-->
        <modify-function signature="scriptValueFromQMetaObject()" remove="all"/>
    </object-type>
    <object-type name="QScriptExtensionInterface"/>
    <object-type name="QScriptExtensionPlugin"/>
    <value-type name="QScriptProgram" since="4.7"/>
    <value-type name="QScriptString">
        <modify-function signature="toArrayIndex(bool*)const">
            <modify-argument index="1">
                <remove-argument/>
            </modify-argument>
            <inject-code class="target" position="beginning">
                <insert-template name="fix_bool*"/>
            </inject-code>
        </modify-function>
    </value-type>
    <value-type name="QScriptValue">
        <enum-type name="PropertyFlag" flags="PropertyFlags"/>
        <enum-type name="ResolveFlag" flags="ResolveFlags"/>
        <enum-type name="SpecialValue"/>
        <add-function signature="__repr__" return-type="PyObject*">
            <inject-code class="target" position="beginning" file="../glue/qtscript.cpp" snippet="qscriptvalue-repr"/>
        </add-function>
        <add-function signature="__mgetitem__">
            <inject-code file="../glue/qtscript.cpp" snippet="qscriptvalue-mgetitem"/>
        </add-function>
        <add-function signature="__iter__()" return-type="PyObject*">
            <inject-code file="qscript_value_iterator_glue.cpp"/>
        </add-function>
    </value-type>
    <object-type name="QScriptValueIterator">
        <add-function signature="__iter__()" return-type="PyObject*">
            <inject-code>
                <insert-template name="__iter__"/>
            </inject-code>
        </add-function>
        <add-function signature="__next__()" return-type="PyObject*">
            <inject-code file="../glue/qtscript.cpp" snippet="qscriptvalueiterator-next"/>
        </add-function>
    </object-type>
</typesystem>

