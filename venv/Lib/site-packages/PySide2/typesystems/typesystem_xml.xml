<?xml version="1.0" encoding="UTF-8"?>
<!--
/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt for Python.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or (at your option) the GNU General
** Public license version 3 or any later version approved by the KDE Free
** Qt Foundation. The licenses are as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-2.0.html and
** https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/
-->
<typesystem package="PySide2.QtXml">
    <load-typesystem name="typesystem_core.xml" generate="no" />
    <load-typesystem name="core_common.xml" generate="no" />
    <load-typesystem name="xml_common.xml" generate="no" />

    <rejection class="QXmlAttributes::Attribute"/>
    <rejection class="QDomNode" field-name="impl"/>
    <rejection class="QXmlInputSource" field-name="EndOfData"/>
    <rejection class="QXmlInputSource" field-name="EndOfDocument"/>

    <value-type name="QDomAttr"/>
    <value-type name="QDomCDATASection"/>
    <value-type name="QDomCharacterData"/>
    <value-type name="QDomComment"/>


    <value-type name="QDomDocument">
        <!-- will be replaced in inject code -->
        <modify-function signature="setContent(const QByteArray&amp;,bool,QString*,int*,int*)">
            <modify-argument index="3">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="5">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="(retval, errorMsg, errorLine, errorColumn)"/>
            </modify-argument>
            <inject-code class="target" position="beginning" file="../glue/qtxml.cpp" snippet="qdomdocument-setcontent" />
        </modify-function>
        <modify-function signature="setContent(const QString&amp;,bool,QString*,int*,int*)">
            <modify-argument index="3">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="5">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="(retval, errorMsg, errorLine, errorColumn)"/>
            </modify-argument>
            <inject-code class="target" position="beginning" file="../glue/qtxml.cpp" snippet="qdomdocument-setcontent" />
        </modify-function>
        <modify-function signature="setContent(QIODevice*,bool,QString*,int*,int*)">
            <modify-argument index="3">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="5">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="(retval, errorMsg, errorLine, errorColumn)"/>
            </modify-argument>
            <inject-code class="target" position="beginning" file="../glue/qtxml.cpp" snippet="qdomdocument-setcontent" />
        </modify-function>
        <modify-function signature="setContent(const QByteArray&amp;,QString*,int*,int*)">
            <modify-argument index="2">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="3">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="(retval, errorMsg, errorLine, errorColumn)"/>
            </modify-argument>
            <inject-code class="target" position="beginning" file="../glue/qtxml.cpp" snippet="qdomdocument-setcontent" />
        </modify-function>
        <modify-function signature="setContent(QIODevice*,QString*,int*,int*)">
            <modify-argument index="2">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="3">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="(retval, errorMsg, errorLine, errorColumn)"/>
            </modify-argument>
            <inject-code class="target" position="beginning" file="../glue/qtxml.cpp" snippet="qdomdocument-setcontent" />
        </modify-function>
        <modify-function signature="setContent(QXmlInputSource*,bool,QString*,int*,int*)">
            <modify-argument index="3">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="5">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="(retval, errorMsg, errorLine, errorColumn)"/>
            </modify-argument>
            <inject-code class="target" position="beginning" file="../glue/qtxml.cpp" snippet="qdomdocument-setcontent" />
        </modify-function>
        <modify-function signature="setContent(QXmlInputSource*,QXmlReader*,QString*,int*,int*)">
            <modify-argument index="3">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="5">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="(retval, errorMsg, errorLine, errorColumn)"/>
            </modify-argument>
            <inject-code class="target" position="beginning" file="../glue/qtxml.cpp" snippet="qdomdocument-setcontent" />
        </modify-function>
        <modify-function signature="setContent(const QString&amp;,QString*,int*,int*)">
            <modify-argument index="2">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="3">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <remove-default-expression/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="(retval, errorMsg, errorLine, errorColumn)"/>
            </modify-argument>
            <inject-code class="target" position="beginning" file="../glue/qtxml.cpp" snippet="qdomdocument-setcontent" />
        </modify-function>
    </value-type>

    <value-type name="QDomDocumentFragment"/>
    <value-type name="QDomDocumentType"/>
    <value-type name="QDomEntity"/>
    <value-type name="QDomEntityReference"/>
    <value-type name="QDomImplementation">
        <enum-type name="InvalidDataPolicy"/>
    </value-type>

    <value-type name="QDomNamedNodeMap"/>

    <value-type name="QDomNode">
        <enum-type name="EncodingPolicy"/>
        <enum-type name="NodeType"/>
        <modify-function signature="save(QTextStream&amp;,int,QDomNode::EncodingPolicy)const" allow-thread="yes"/>
    </value-type>

    <value-type name="QDomNodeList"/>
    <value-type name="QDomNotation"/>
    <value-type name="QDomProcessingInstruction"/>

    <value-type name="QDomText"/>

    <object-type name="QXmlParseException"/>

    <value-type name="QXmlAttributes"/>

    <object-type name="QXmlNamespaceSupport"/>

    <value-type name="QDomElement">
        <!-- PYSIDE-1372
            We will leave only one for int, and one for float since Python
            doesn't have other variations on the primitive types.
            Only 'qlonglong' and 'double' will be available from the Qt API.
            TODO: This will require a better review of the shiboken primitive
                  types converters, since this situation might happen on
                  different signatures.
        -->
        <modify-function signature="setAttribute(const QString&amp;, uint)" remove="all"/>
        <modify-function signature="setAttribute(const QString&amp;, float)" remove="all"/>
        <modify-function signature="setAttribute(const QString&amp;, int)" remove="all"/>
        <modify-function signature="setAttribute(const QString&amp;, qulonglong)" remove="all"/>
    </value-type>

    <object-type name="QXmlContentHandler">
        <modify-function signature="setDocumentLocator(QXmlLocator*)">
            <modify-argument index="1">
                <define-ownership owner="c++"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QXmlDTDHandler"/>
    <object-type name="QXmlDeclHandler"/>
    <object-type name="QXmlErrorHandler"/>
    <object-type name="QXmlLexicalHandler"/>


    <object-type name="QXmlEntityResolver">
        <modify-function signature="resolveEntity(const QString&amp;,const QString&amp;,QXmlInputSource*&amp;)">
            <modify-argument index="3">
                <remove-argument/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="PySequence"/>
                <conversion-rule class="native">
                    <insert-template name="QXmlEntityResolver_resolveEntity_return_conversion_native"/>
                </conversion-rule>
            </modify-argument>
            <inject-code class="target" position="end" file="../glue/qtxml.cpp" snippet="qxmlentityresolver-resolveentity"/>
        </modify-function>
    </object-type>
    <object-type name="QXmlDefaultHandler">
        <modify-function signature="setDocumentLocator(QXmlLocator*)">
            <modify-argument index="1">
                <define-ownership owner="c++"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="resolveEntity(const QString&amp;,const QString&amp;,QXmlInputSource*&amp;)">
            <modify-argument index="3">
                <remove-argument/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="PySequence"/>
                <conversion-rule class="native">
                    <insert-template name="QXmlEntityResolver_resolveEntity_return_conversion_native"/>
                </conversion-rule>
            </modify-argument>
            <inject-code class="target" position="end" file="../glue/qtxml.cpp" snippet="qxmlentityresolver-resolveentity"/>
        </modify-function>
    </object-type>
    <object-type name="QXmlInputSource"/>
    <object-type name="QXmlLocator"/>

    <object-type name="QXmlReader">
        <modify-function signature="parse(const QXmlInputSource*)">
            <modify-argument index="1" invalidate-after-use="yes"/>
        </modify-function>
        <modify-function signature="feature(QString,bool*)const">
            <modify-argument index="2">
                <remove-default-expression/>
                <remove-argument/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="PySequence"/>
                <conversion-rule class="native">
                    <insert-template name="fix_virtual_method_return_value_and_bool*"/>
                </conversion-rule>
            </modify-argument>
            <inject-code class="target" position="beginning">
                <insert-template name="fix_args,bool*"/>
            </inject-code>
        </modify-function>
        <modify-function signature="property(QString,bool*)const">
            <modify-argument index="2">
                <remove-default-expression/>
                <remove-argument/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="PySequence"/>
                <conversion-rule class="native">
                    <insert-template name="fix_virtual_method_return_value_and_bool*"/>
                </conversion-rule>
            </modify-argument>
            <inject-code class="target" position="beginning">
                <insert-template name="fix_args,bool*"/>
            </inject-code>
        </modify-function>
    </object-type>
    <object-type name="QXmlSimpleReader">
        <modify-function signature="parse(const QXmlInputSource*,bool)">
            <modify-argument index="1" invalidate-after-use="yes"/>
        </modify-function>

        <modify-function signature="setContentHandler(QXmlContentHandler*)">
            <modify-argument index="1">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setDTDHandler(QXmlDTDHandler*)">
            <modify-argument index="1">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setDeclHandler(QXmlDeclHandler*)">
            <modify-argument index="1">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setEntityResolver(QXmlEntityResolver*)">
            <modify-argument index="1">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setErrorHandler(QXmlErrorHandler*)">
            <modify-argument index="1">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setLexicalHandler(QXmlLexicalHandler*)">
            <modify-argument index="1">
                <parent index="this" action="add"/>
            </modify-argument>
        </modify-function>

        <modify-function signature="feature(QString,bool*)const">
            <modify-argument index="2">
                <remove-default-expression/>
                <remove-argument/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="PySequence"/>
                <conversion-rule class="native">
                    <insert-template name="fix_virtual_method_return_value_and_bool*"/>
                </conversion-rule>
            </modify-argument>
            <inject-code class="target" position="beginning">
                <insert-template name="fix_args,bool*"/>
            </inject-code>
        </modify-function>
        <modify-function signature="property(QString,bool*)const">
            <modify-argument index="2">
                <remove-default-expression/>
                <remove-argument/>
            </modify-argument>
            <modify-argument index="return">
                <replace-type modified-type="PySequence"/>
                <conversion-rule class="native">
                    <insert-template name="fix_virtual_method_return_value_and_bool*"/>
                </conversion-rule>
            </modify-argument>
            <inject-code class="target" position="beginning">
                <insert-template name="fix_args,bool*"/>
            </inject-code>
        </modify-function>
    </object-type>
</typesystem>

