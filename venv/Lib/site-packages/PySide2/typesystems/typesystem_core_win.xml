<?xml version="1.0" encoding="UTF-8"?>
<!--
/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt for Python.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or (at your option) the GNU General
** Public license version 3 or any later version approved by the KDE Free
** Qt Foundation. The licenses are as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-2.0.html and
** https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/
-->
<typesystem package="PySide2.QtCore">
  <extra-includes>
    <include file-name="windows.h" location="global"/>
  </extra-includes>
  <primitive-type name="Qt::HANDLE" target-lang-api-name="PyObject"/>
  <primitive-type name="HWND">
      <!-- Qt5: Add this include there to insert ti in the global qtcore header (needed by qprocess_wrapper) -->
      <include file-name="wtypes.h" location="global"/>
      <conversion-rule>
        <native-to-target>
        #ifdef IS_PY3K
        return PyCapsule_New(%in, 0, 0);
        #else
        return PyCObject_FromVoidPtr(%in, 0);
        #endif
        </native-to-target>
        <target-to-native>
            <add-conversion type="PyNone">
            %out = 0;
            </add-conversion>
            <add-conversion check="checkPyCapsuleOrPyCObject(%in)" type="PyObject">
            #ifdef IS_PY3K
            %out = (%OUTTYPE)PyCapsule_GetPointer(%in, 0);
            #else
            %out = (%OUTTYPE)PyCObject_AsVoidPtr(%in);
            #endif
            </add-conversion>
        </target-to-native>
      </conversion-rule>
  </primitive-type>
  <inject-code class="native" position="beginning">
    <insert-template name="checkPyCapsuleOrPyCObject_func"/>
  </inject-code>

  <!-- Qt5: had to move QAbstractEventDispatcher into os-specific files because of Windows -->
  <object-type name="QWinEventNotifier"/>
  <object-type name="QAbstractEventDispatcher">
    <modify-function signature="processEvents(QFlags&lt;QEventLoop::ProcessEventsFlag>)" allow-thread="yes"/>
    <!-- Qt5: had to add this recursive object def. This was crucial to get rid of "pure virtual" -->
    <object-type name="TimerInfo"/>
  </object-type>
  <object-type name="QSysInfo">
    <enum-type name="Endian"/>
    <enum-type name="Sizes"/>
    <enum-type name="WinVersion" since="5.5"/>
  </object-type>
  <suppress-warning text="skipping field 'QSysInfo::MacintoshVersion' with unmatched type 'QSysInfo::MacVersion'"/>
  <suppress-warning text="enum 'QSysInfo::MacVersion' does not have a type entry or is not an enum"/>
</typesystem>
