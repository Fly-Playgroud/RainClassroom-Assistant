<?xml version="1.0" encoding="UTF-8"?>
<!--
/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt for Python.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or (at your option) the GNU General
** Public license version 3 or any later version approved by the KDE Free
** Qt Foundation. The licenses are as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-2.0.html and
** https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/
-->

<typesystem package="PySide2.QtAxContainer">
    <load-typesystem name="typesystem_widgets.xml" generate="no"/>
    <rejection class="*" function-name="connectNotify"/>
    <rejection class="*" function-name="queryInterface"/>
    <rejection class="*" function-name="qt_metacall"/>
    <rejection class="*" function-name="qt_static_metacall"/>
    <rejection class="*" field-name="qt_meta_stringdata_QAxBase"/>
    <rejection class="*" field-name="qt_meta_data_QAxBase"/>
    <object-type name="QAxBase">
        <!--  PYSIDE-1410, Check for QVariantList first since it also is a QVariant -->
        <modify-function signature="dynamicCall(const char*,QList&lt;QVariant&gt;&amp;)" overload-number="0"/>
        <modify-function signature="dynamicCall(const char*,const QVariant&amp;,const QVariant&amp;,const QVariant&amp;,const QVariant&amp;,const QVariant&amp;,const QVariant&amp;,const QVariant&amp;,const QVariant&amp;)" overload-number="1"/>
        <!-- Remove protected, internal function -->
        <modify-function signature="dynamicCall(const char*,QList&lt;QVariant&gt;&amp;,unsigned)" remove="all"/>
    </object-type>
    <object-type name="QAxObject"/>
    <object-type name="QAxScript">
        <enum-type name="FunctionFlags"/>
    </object-type>
    <object-type name="QAxScriptEngine">
        <enum-type name="State"/>
    </object-type>
    <object-type name="QAxScriptManager">
        <!-- Ax Servers only -->
        <modify-function signature="addObject(QObject*)" remove="all"/>
    </object-type>
    <object-type name="QAxSelect">
        <enum-type name="SandboxingLevel"/>
    </object-type>
    <object-type name="QAxWidget"/>
</typesystem>
